package InterfacesPrincipales.inicio;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import ArchivosCRUD.ClientesCRUD;
import ArchivosCRUD.MecanicosCRUD;
import Personas.Cliente;
import Personas.Mecanico;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author MADE
 */
public class RegistroNuevo extends javax.swing.JPanel {

    /**
     * Creates new form RegistroNuevo
     */
    public RegistroNuevo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        foto = new javax.swing.JLabel();
        userJB = new javax.swing.JLabel();
        ceduJB = new javax.swing.JLabel();
        cedulaTXT = new javax.swing.JTextField();
        userTXT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RegistrarseBTN = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ContraseñaTXT = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Registro Mecanico");
        titulo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 499, 50));

        foto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/registro-en-linea.png"))); // NOI18N
        add(foto, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 190, 136));

        userJB.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        userJB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userJB.setText("usuario:");
        add(userJB, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 190, 100, 55));

        ceduJB.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        ceduJB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ceduJB.setText("cedula:");
        add(ceduJB, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 260, 100, 55));

        cedulaTXT.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        cedulaTXT.setName("cedulaTXT"); // NOI18N
        cedulaTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaTXTActionPerformed(evt);
            }
        });
        add(cedulaTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 320, 55));

        userTXT.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        userTXT.setName("userTXT"); // NOI18N
        userTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTXTActionPerformed(evt);
            }
        });
        add(userTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 320, 55));

        jLabel4.setFont(new java.awt.Font("Showcard Gothic", 0, 10)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Aceptación de Términos y Condiciones  ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 380, -1));

        jLabel6.setFont(new java.awt.Font("Showcard Gothic", 0, 10)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Al registrarte como trabajador, confirmas que has leído y aceptado los ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 450, -1));

        jLabel7.setFont(new java.awt.Font("Showcard Gothic", 0, 10)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("términos y condiciones de la empresa.");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 250, -1));

        RegistrarseBTN.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        RegistrarseBTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegistrarseBTN.setText("Registrarse");
        RegistrarseBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        RegistrarseBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegistrarseBTNMouseClicked(evt);
            }
        });
        add(RegistrarseBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, 190, 50));

        jLabel8.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("contraseña:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 124, 55));
        add(ContraseñaTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 320, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void RegistrarseBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegistrarseBTNMouseClicked
        //Obtener los datos de los campos de texto
        String nombreMecanico = userTXT.getText();
        String cedula = cedulaTXT.getText();

        char[] txt = ContraseñaTXT.getPassword();
        String contraseñaMecanico = new String(txt);

        //Validar que el nombre y la contraseña no estén vacíos.
        if (nombreMecanico.isEmpty() || contraseñaMecanico.isEmpty() || cedula.isEmpty()) {
            JOptionPane.showMessageDialog(null, "deben llenarse todos los campos", "Alerta", JOptionPane.WARNING_MESSAGE);

        } else {

            //Validar que el nombre solo contenga letras.
            if (!esNombreValido(nombreMecanico)) {
                JOptionPane.showMessageDialog(null, "nombre debe contener solo letras", "Alerta", JOptionPane.WARNING_MESSAGE);

            } else {

                boolean existe = false;

                //Validar que no haya mecánicos con el mismo nombre y contraseña.
                ArrayList<Mecanico> mecanicos = MecanicosCRUD.Read();

                ArrayList<Cliente> clientes = ClientesCRUD.Read();

                for (Cliente cliente : clientes) {

                    if (cliente.getId().equals(cedula)) {

                        existe = true;

                    }

                }

                for (Mecanico existente : mecanicos) {
                    if (existente.getId().equals(cedula)) {
                        existe = true;
                    }
                }

                if (existe) {

                    JOptionPane.showMessageDialog(null, "esta identificacion de cliente ya existe", "Alerta", JOptionPane.WARNING_MESSAGE);

                } else {
                    //Crear un objeto Mecanico.
                    Mecanico mecanico = new Mecanico(nombreMecanico, contraseñaMecanico, cedula);

                    //Guardar el Mecanico en el archivo binario.
                    MecanicosCRUD.Create(mecanico);

                    JOptionPane.showMessageDialog(null, "el mecanico " + nombreMecanico + " con numero de identificacion: " + cedula + " se registro correctamente", "Alerta", JOptionPane.WARNING_MESSAGE);

                }
            }

            userTXT.setText("");
            cedulaTXT.setText("");
            ContraseñaTXT.setText("");

        }


    }//GEN-LAST:event_RegistrarseBTNMouseClicked

    private void userTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTXTActionPerformed

    private void cedulaTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaTXTActionPerformed

    public boolean esNombreValido(String nombre) {
        //Se itera sobre cada carácter en el nombre utilizando un bucle for-each.
        for (char c : nombre.toCharArray()) {
            //Se verifica si el carácter actual no es una letra.
            if (!Character.isLetter(c)) {
                //Si se encuentra un carácter que no es una letra, se devuelve false.
                return false;
            }
        }
        //Si todos los caracteres son letras, se devuelve true.
        return true;
    }

    //Metodo auxiliar para verificar que se estan guardando lo datos en el archivo.

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField ContraseñaTXT;
    private javax.swing.JLabel RegistrarseBTN;
    private javax.swing.JLabel ceduJB;
    private javax.swing.JTextField cedulaTXT;
    private javax.swing.JLabel foto;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel titulo;
    private javax.swing.JLabel userJB;
    private javax.swing.JTextField userTXT;
    // End of variables declaration//GEN-END:variables
}
